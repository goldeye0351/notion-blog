{"version":3,"file":"comments.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@supabase/supabase-js/dist/module/lib/version.js","../../node_modules/@supabase/supabase-js/dist/module/lib/constants.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/version.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/cookies.js","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","../../node_modules/@supabase/gotrue-js/dist/module/GoTrueApi.js","../../node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/types.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestTransformBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestFilterBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestQueryBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestRpcBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/version.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/constants.js","../../node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","../../node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","../../node_modules/es5-ext/global.js","../../node_modules/websocket/lib/browser.js","../../node_modules/websocket/lib/version.js","../../node_modules/@supabase/realtime-js/dist/module/lib/version.js","../../node_modules/@supabase/realtime-js/dist/module/lib/constants.js","../../node_modules/@supabase/realtime-js/dist/module/lib/timer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/push.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeSubscription.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseRealtimeClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseQueryBuilder.js","../../node_modules/@supabase/storage-js/dist/module/lib/version.js","../../node_modules/@supabase/storage-js/dist/module/lib/constants.js","../../node_modules/@supabase/storage-js/dist/module/lib/fetch.js","../../node_modules/@supabase/storage-js/dist/module/lib/helpers.js","../../node_modules/@supabase/storage-js/dist/module/lib/StorageBucketApi.js","../../node_modules/@supabase/storage-js/dist/module/lib/StorageFileApi.js","../../node_modules/@supabase/storage-js/dist/module/StorageClient.js","../../node_modules/@supabase/functions-js/dist/module/index.js","../../node_modules/@supabase/functions-js/dist/module/helper.js","../../node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","../../node_modules/@supabase/supabase-js/dist/module/index.js","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../node_modules/generate-avatar/dist/md5hash.js","../../node_modules/generate-avatar/dist/generateFromString.js","../../node_modules/generate-avatar/dist/index.js","../../src/components/CommentBox.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.47.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    if (tag && typeof tag !== 'string') {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export const version = '1.33.3';\n//# sourceMappingURL=version.js.map","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\nexport const STORAGE_KEY = 'supabase.auth.token';\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'text/plain;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return params;\n};\nfunction _handleRequest(fetcher, method, url, options, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options);\n    });\n}\nexport function post(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, body);\n    });\n}\nexport function put(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, body);\n    });\n}\nexport function remove(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","// generated by genversion\nexport const version = '1.22.12';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 60 * 1000;\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const COOKIE_OPTIONS = {\n    name: 'sb',\n    lifetime: 60 * 60 * 8,\n    domain: '',\n    path: '/',\n    sameSite: 'lax',\n};\n//# sourceMappingURL=constants.js.map","/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n    const opt = options || {};\n    const enc = encodeURIComponent;\n    /* eslint-disable-next-line no-control-regex */\n    const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    const value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    let str = name + '=' + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError('option maxAge is invalid');\n        }\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req) {\n    if (!req || !req.headers || !req.headers.host) {\n        throw new Error('The \"host\" request header is not available');\n    }\n    const host = (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host;\n    if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n        return false;\n    }\n    return true;\n}\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie, secure) {\n    var _a, _b, _c;\n    return serialize(cookie.name, cookie.value, {\n        maxAge: cookie.maxAge,\n        expires: new Date(Date.now() + cookie.maxAge * 1000),\n        httpOnly: true,\n        secure,\n        path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n        domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n        sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax',\n    });\n}\n/**\n * Get Cookie Header strings.\n */\nexport function getCookieString(req, res, cookies) {\n    const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)));\n    const previousCookies = res.getHeader('Set-Cookie');\n    if (previousCookies) {\n        if (previousCookies instanceof Array) {\n            Array.prototype.push.apply(strCookies, previousCookies);\n        }\n        else if (typeof previousCookies === 'string') {\n            strCookies.push(previousCookies);\n        }\n    }\n    return strCookies;\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req, res, cookies) {\n    res.setHeader('Set-Cookie', getCookieString(req, res, cookies));\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req, res, cookie) {\n    setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n    setCookie(req, res, {\n        name,\n        value: '',\n        maxAge: -1,\n    });\n}\n//# sourceMappingURL=cookies.js.map","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","import crossFetch from 'cross-fetch';\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './lib/fetch';\nimport { COOKIE_OPTIONS } from './lib/constants';\nimport { setCookies, getCookieString } from './lib/cookies';\nimport { expiresAt, resolveFetch } from './lib/helpers';\nexport default class GoTrueApi {\n    constructor({ url = '', headers = {}, cookieOptions, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.cookieOptions = Object.assign(Object.assign({}, COOKIE_OPTIONS), cookieOptions);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Create a temporary object with all configured headers and\n     * adds the Authorization token to be used on request methods\n     * @param jwt A valid, logged-in JWT.\n     */\n    _createRequestHeaders(jwt) {\n        const headers = Object.assign({}, this.headers);\n        headers['Authorization'] = `Bearer ${jwt}`;\n        return headers;\n    }\n    cookieName() {\n        var _a;\n        return (_a = this.cookieOptions.name) !== null && _a !== void 0 ? _a : '';\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    getUrlForProvider(provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        return `${this.url}/authorize?${urlParams.join('&')}`;\n    }\n    /**\n     * Creates a new user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUpWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/signup${queryString}`, {\n                    email,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    signInWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '?grant_type=password';\n                if (options.redirectTo) {\n                    queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { email, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Signs up a new user using their phone number and a password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     * @param data Optional user metadata.\n     */\n    signUpWithPhone(phone, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/signup`, {\n                    phone,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their phone number and password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     */\n    signInWithPhone(phone, password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=password';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { phone, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an OpenID Connect user using their id_token.\n     * @param id_token The IDToken of the user.\n     * @param nonce The nonce of the user. The nonce is a random value generated by the developer (= yourself) before the initial grant is started. You should check the OpenID Connect specification for details. https://openid.net/developers/specs/\n     * @param provider The provider of the user.\n     * @param client_id The clientID of the user.\n     * @param issuer The issuer of the user.\n     */\n    signInWithOpenIDConnect({ id_token, nonce, client_id, issuer, provider, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=id_token';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { id_token, nonce, client_id, issuer, provider }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a magic login link to an email address.\n     * @param email The email address of the user.\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    sendMagicLinkEmail(email, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const shouldCreateUser = (_a = options.shouldCreateUser) !== null && _a !== void 0 ? _a : true;\n                const data = yield post(this.fetch, `${this.url}/otp${queryString}`, {\n                    email,\n                    create_user: shouldCreateUser,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n     * @param phone The user's phone number WITH international prefix\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     */\n    sendMobileOTP(phone, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const shouldCreateUser = (_a = options.shouldCreateUser) !== null && _a !== void 0 ? _a : true;\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/otp`, {\n                    phone,\n                    create_user: shouldCreateUser,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield post(this.fetch, `${this.url}/logout`, {}, { headers: this._createRequestHeaders(jwt), noResolveJson: true });\n                return { error: null };\n            }\n            catch (e) {\n                return { error: e };\n            }\n        });\n    }\n    /**\n     * @deprecated Use `verifyOTP` instead!\n     * @param phone The user's phone number WITH international prefix\n     * @param token token that user was sent to their mobile phone\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyMobileOTP(phone, token, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/verify`, { phone, token, type: 'sms', redirect_to: options.redirectTo }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Send User supplied Email / Mobile OTP to be verified\n     * @param email The user's email address\n     * @param phone The user's phone number WITH international prefix\n     * @param token token that user was sent to their mobile phone\n     * @param type verification type that the otp is generated for\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyOTP({ email, phone, token, type = 'sms' }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/verify`, { email, phone, token, type, redirect_to: options.redirectTo }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/invite${queryString}`, { email, data: options.data }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a reset request to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/recover${queryString}`, { email, gotrue_meta_security: { hcaptcha_token: options.captchaToken } }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/token?grant_type=refresh_token`, { refresh_token: refreshToken }, { headers: this.headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Set/delete the auth cookie based on the AuthChangeEvent.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     * @param req The request object.\n     * @param res The response object.\n     */\n    setAuthCookie(req, res) {\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            setCookies(req, res, [\n                { key: 'access-token', value: session.access_token },\n                { key: 'refresh-token', value: session.refresh_token },\n            ].map((token) => {\n                var _a;\n                return ({\n                    name: `${this.cookieName()}-${token.key}`,\n                    value: token.value,\n                    domain: this.cookieOptions.domain,\n                    maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                    path: this.cookieOptions.path,\n                    sameSite: this.cookieOptions.sameSite,\n                });\n            }));\n        }\n        if (event === 'SIGNED_OUT') {\n            setCookies(req, res, ['access-token', 'refresh-token'].map((key) => ({\n                name: `${this.cookieName()}-${key}`,\n                value: '',\n                maxAge: -1,\n            })));\n        }\n        res.status(200).json({});\n    }\n    /**\n     * Deletes the Auth Cookies and redirects to the\n     * @param req The request object.\n     * @param res The response object.\n     * @param options Optionally specify a `redirectTo` URL in the options.\n     */\n    deleteAuthCookie(req, res, { redirectTo = '/' }) {\n        setCookies(req, res, ['access-token', 'refresh-token'].map((key) => ({\n            name: `${this.cookieName()}-${key}`,\n            value: '',\n            maxAge: -1,\n        })));\n        return res.redirect(307, redirectTo);\n    }\n    /**\n     * Helper method to generate the Auth Cookie string for you in case you can't use `setAuthCookie`.\n     * @param req The request object.\n     * @param res The response object.\n     * @returns The Cookie string that needs to be set as the value for the `Set-Cookie` header.\n     */\n    getAuthCookieString(req, res) {\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            return getCookieString(req, res, [\n                { key: 'access-token', value: session.access_token },\n                { key: 'refresh-token', value: session.refresh_token },\n            ].map((token) => {\n                var _a;\n                return ({\n                    name: `${this.cookieName()}-${token.key}`,\n                    value: token.value,\n                    domain: this.cookieOptions.domain,\n                    maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                    path: this.cookieOptions.path,\n                    sameSite: this.cookieOptions.sameSite,\n                });\n            }));\n        }\n        if (event === 'SIGNED_OUT') {\n            return getCookieString(req, res, ['access-token', 'refresh-token'].map((key) => ({\n                name: `${this.cookieName()}-${key}`,\n                value: '',\n                maxAge: -1,\n            })));\n        }\n        return res.getHeader('Set-Cookie');\n    }\n    /**\n     * Generates links to be sent via email or other.\n     * @param type The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     * @param email The user's email.\n     * @param password User password. For signup only.\n     * @param data Optional user metadata. For signup only.\n     * @param redirectTo The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     */\n    generateLink(type, email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/generate_link`, {\n                    type,\n                    email,\n                    password: options.password,\n                    data: options.data,\n                    redirect_to: options.redirectTo,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param attributes The data you want to create the user with.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/users`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    listUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users`, {\n                    headers: this.headers,\n                });\n                return { data: data.users, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by reading the cookie from the request.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    getUserByCookie(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!req.cookies) {\n                    throw new Error('Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!');\n                }\n                const access_token = req.cookies[`${this.cookieName()}-access-token`];\n                const refresh_token = req.cookies[`${this.cookieName()}-refresh-token`];\n                if (!access_token) {\n                    throw new Error('No cookie found!');\n                }\n                const { user, error: getUserError } = yield this.getUser(access_token);\n                if (getUserError) {\n                    if (!refresh_token)\n                        throw new Error('No refresh_token cookie found!');\n                    if (!res)\n                        throw new Error('You need to pass the res object to automatically refresh the session!');\n                    const { data, error } = yield this.refreshAccessToken(refresh_token);\n                    if (error) {\n                        throw error;\n                    }\n                    else if (data) {\n                        setCookies(req, res, [\n                            { key: 'access-token', value: data.access_token },\n                            { key: 'refresh-token', value: data.refresh_token },\n                        ].map((token) => {\n                            var _a;\n                            return ({\n                                name: `${this.cookieName()}-${token.key}`,\n                                value: token.value,\n                                domain: this.cookieOptions.domain,\n                                maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                                path: this.cookieOptions.path,\n                                sameSite: this.cookieOptions.sameSite,\n                            });\n                        }));\n                        return { token: data.access_token, user: data.user, data: data.user, error: null };\n                    }\n                }\n                return { token: access_token, user: user, data: user, error: null };\n            }\n            catch (e) {\n                return { token: null, user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this; //\n                const data = yield put(this.fetch, `${this.url}/admin/users/${uid}`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param uid The user uid you want to remove.\n     */\n    deleteUser(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/admin/users/${uid}`, {}, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Gets the current user details.\n     *\n     * This method is called by the GoTrueClient `update` where\n     * the jwt is set to this.currentSession.access_token\n     * and therefore, acts like getting the currently authenticated used\n     *\n     * @param jwt A valid, logged-in JWT. Typically, the access_token for the currentSession\n     */\n    getUser(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/user`, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     * @param jwt A valid, logged-in JWT.\n     * @param attributes The data you want to update.\n     */\n    updateUser(jwt, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/user`, attributes, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueApi from './GoTrueApi';\nimport { isBrowser, getParameterByName, uuid } from './lib/helpers';\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param options.url The URL of the GoTrue server.\n     * @param options.headers Any additional headers to send to the GoTrue server.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.cookieOptions\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(options) {\n        this.stateChangeEmitters = new Map();\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.currentUser = null;\n        this.currentSession = null;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.multiTab = settings.multiTab;\n        this.localStorage = settings.localStorage || globalThis.localStorage;\n        this.api = new GoTrueApi({\n            url: settings.url,\n            headers: settings.headers,\n            cookieOptions: settings.cookieOptions,\n            fetch: settings.fetch,\n        });\n        this._recoverSession();\n        this._recoverAndRefresh();\n        this._listenForMultiTabEvents();\n        if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n            // Handle the OAuth redirect\n            this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\n                if (error) {\n                    console.error('Error getting session from URL.', error);\n                }\n            });\n        }\n    }\n    /**\n     * Creates a new user.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param phone The user's phone number.\n     * @param redirectTo The redirect URL attached to the signup confirmation link. Does not redirect the user if it's a mobile signup.\n     * @param data Optional user metadata.\n     */\n    signUp({ email, password, phone }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = phone && password\n                    ? yield this.api.signUpWithPhone(phone, password, {\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    })\n                    : yield this.api.signUpWithEmail(email, password, {\n                        redirectTo: options.redirectTo,\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on sign up.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in an existing user, or login via a third-party provider.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param phone The user's phone number.\n     * @param password The user's password.\n     * @param refreshToken A valid refresh token that was returned on login.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL to send the user to after they are confirmed (OAuth logins only).\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    signIn({ email, phone, password, refreshToken, provider, oidc }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                if (email && !password) {\n                    const { error } = yield this.api.sendMagicLinkEmail(email, {\n                        redirectTo: options.redirectTo,\n                        shouldCreateUser: options.shouldCreateUser,\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (email && password) {\n                    return this._handleEmailSignIn(email, password, {\n                        redirectTo: options.redirectTo,\n                    });\n                }\n                if (phone && !password) {\n                    const { error } = yield this.api.sendMobileOTP(phone, {\n                        shouldCreateUser: options.shouldCreateUser,\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (phone && password) {\n                    return this._handlePhoneSignIn(phone, password);\n                }\n                if (refreshToken) {\n                    // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n                    const { error } = yield this._callRefreshToken(refreshToken);\n                    if (error)\n                        throw error;\n                    return {\n                        user: this.currentUser,\n                        session: this.currentSession,\n                        error: null,\n                    };\n                }\n                if (provider) {\n                    return this._handleProviderSignIn(provider, {\n                        redirectTo: options.redirectTo,\n                        scopes: options.scopes,\n                    });\n                }\n                if (oidc) {\n                    return this._handleOpenIDConnectSignIn(oidc);\n                }\n                throw new Error(`You must provide either an email, phone number, a third-party provider or OpenID Connect.`);\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     * @param email The user's email address.\n     * @param phone The user's phone number.\n     * @param token The user's password.\n     * @param type The user's verification type.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyOTP(params, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = yield this.api.verifyOTP(params, options);\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on token verification.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n     *\n     * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n     */\n    user() {\n        return this.currentUser;\n    }\n    /**\n     * Returns the session data, if there is an active session.\n     */\n    session() {\n        return this.currentSession;\n    }\n    /**\n     * Force refreshes the session including the user data in case it was updated in a different session.\n     */\n    refreshSession() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                // currentSession and currentUser will be updated to latest on _callRefreshToken\n                const { error } = yield this._callRefreshToken();\n                if (error)\n                    throw error;\n                return { data: this.currentSession, user: this.currentUser, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates user data, if there is a logged in user.\n     */\n    update(attributes) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                const { user, error } = yield this.api.updateUser(this.currentSession.access_token, attributes);\n                if (error)\n                    throw error;\n                if (!user)\n                    throw Error('Invalid user data.');\n                const session = Object.assign(Object.assign({}, this.currentSession), { user });\n                this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED');\n                return { data: user, user, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sets the session data from refresh_token and returns current Session and Error\n     * @param refresh_token a JWT token\n     */\n    setSession(refresh_token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error) {\n                    return { session: null, error: error };\n                }\n                this._saveSession(data);\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { session: data, error: null };\n            }\n            catch (e) {\n                return { error: e, session: null };\n            }\n        });\n    }\n    /**\n     * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n     * @param access_token a jwt access token\n     */\n    setAuth(access_token) {\n        this.currentSession = Object.assign(Object.assign({}, this.currentSession), { access_token, token_type: 'bearer', user: this.user() });\n        return this.currentSession;\n    }\n    /**\n     * Gets the session data from a URL string\n     * @param options.storeSession Optionally store the session in the browser\n     */\n    getSessionFromUrl(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new Error('No browser detected.');\n                const error_description = getParameterByName('error_description');\n                if (error_description)\n                    throw new Error(error_description);\n                const provider_token = getParameterByName('provider_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new Error('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new Error('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new Error('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new Error('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { user, error } = yield this.api.getUser(access_token);\n                if (error)\n                    throw error;\n                const session = {\n                    provider_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user: user,\n                };\n                if (options === null || options === void 0 ? void 0 : options.storeSession) {\n                    this._saveSession(session);\n                    const recoveryMode = getParameterByName('type');\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    if (recoveryMode === 'recovery') {\n                        this._notifyAllSubscribers('PASSWORD_RECOVERY');\n                    }\n                }\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n     *\n     * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessToken = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token;\n            this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT');\n            if (accessToken) {\n                const { error } = yield this.api.signOut(accessToken);\n                if (error)\n                    return { error };\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n     */\n    onAuthStateChange(callback) {\n        try {\n            const id = uuid();\n            const subscription = {\n                id,\n                callback,\n                unsubscribe: () => {\n                    this.stateChangeEmitters.delete(id);\n                },\n            };\n            this.stateChangeEmitters.set(id, subscription);\n            return { data: subscription, error: null };\n        }\n        catch (e) {\n            return { data: null, error: e };\n        }\n    }\n    _handleEmailSignIn(email, password, options = {}) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithEmail(email, password, {\n                    redirectTo: options.redirectTo,\n                });\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if (((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.confirmed_at) || ((_b = data === null || data === void 0 ? void 0 : data.user) === null || _b === void 0 ? void 0 : _b.email_confirmed_at)) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handlePhoneSignIn(phone, password) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithPhone(phone, password);\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if ((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.phone_confirmed_at) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handleProviderSignIn(provider, options = {}) {\n        const url = this.api.getUrlForProvider(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n        });\n        try {\n            // try to open on the browser\n            if (isBrowser()) {\n                window.location.href = url;\n            }\n            return { provider, url, data: null, session: null, user: null, error: null };\n        }\n        catch (e) {\n            // fallback to returning the URL\n            if (url)\n                return { provider, url, data: null, session: null, user: null, error: null };\n            return { data: null, user: null, session: null, error: e };\n        }\n    }\n    _handleOpenIDConnectSignIn({ id_token, nonce, client_id, issuer, provider, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (id_token && nonce && ((client_id && issuer) || provider)) {\n                try {\n                    const { data, error } = yield this.api.signInWithOpenIDConnect({\n                        id_token,\n                        nonce,\n                        client_id,\n                        issuer,\n                        provider,\n                    });\n                    if (error || !data)\n                        return { user: null, session: null, error };\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    return { user: data.user, session: data, error: null };\n                }\n                catch (e) {\n                    return { user: null, session: null, error: e };\n                }\n            }\n            throw new Error(`You must provide a OpenID Connect provider with your id token and nonce.`);\n        });\n    }\n    /**\n     * Attempts to get the session from LocalStorage\n     * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n     */\n    _recoverSession() {\n        var _a;\n        try {\n            const json = isBrowser() && ((_a = this.localStorage) === null || _a === void 0 ? void 0 : _a.getItem(STORAGE_KEY));\n            if (!json || typeof json !== 'string') {\n                return null;\n            }\n            const data = JSON.parse(json);\n            const { currentSession, expiresAt } = data;\n            const timeNow = Math.round(Date.now() / 1000);\n            if (expiresAt >= timeNow && (currentSession === null || currentSession === void 0 ? void 0 : currentSession.user)) {\n                this._saveSession(currentSession);\n                this._notifyAllSubscribers('SIGNED_IN');\n            }\n        }\n        catch (error) {\n            console.log('error', error);\n        }\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const json = isBrowser() && (yield this.localStorage.getItem(STORAGE_KEY));\n                if (!json) {\n                    return null;\n                }\n                const data = JSON.parse(json);\n                const { currentSession, expiresAt } = data;\n                const timeNow = Math.round(Date.now() / 1000);\n                if (expiresAt < timeNow) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                    else {\n                        this._removeSession();\n                    }\n                }\n                else if (!currentSession) {\n                    console.log('Current session is missing data.');\n                    this._removeSession();\n                }\n                else {\n                    // should be handled on _recoverSession method already\n                    // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n                    this._saveSession(currentSession);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return null;\n            }\n        });\n    }\n    _callRefreshToken(refresh_token) {\n        var _a;\n        if (refresh_token === void 0) { refresh_token = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.refresh_token; }\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error)\n                    throw error;\n                if (!data)\n                    throw Error('Invalid session data.');\n                this._saveSession(data);\n                this._notifyAllSubscribers('TOKEN_REFRESHED');\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    _notifyAllSubscribers(event) {\n        this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        this.currentSession = session;\n        this.currentUser = session.user;\n        const expiresAt = session.expires_at;\n        if (expiresAt) {\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = expiresAt - timeNow;\n            const refreshDurationBeforeExpires = expiresIn > 60 ? 60 : 0.5;\n            this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n        }\n        // Do we need any extra check before persist session\n        // access_token or user ?\n        if (this.persistSession && session.expires_at) {\n            this._persistSession(this.currentSession);\n        }\n    }\n    _persistSession(currentSession) {\n        const data = { currentSession, expiresAt: currentSession.expires_at };\n        isBrowser() && this.localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.currentSession = null;\n            this.currentUser = null;\n            if (this.refreshTokenTimer)\n                clearTimeout(this.refreshTokenTimer);\n            isBrowser() && (yield this.localStorage.removeItem(STORAGE_KEY));\n        });\n    }\n    /**\n     * Clear and re-create refresh token timer\n     * @param value time intervals in milliseconds\n     */\n    _startAutoRefreshToken(value) {\n        if (this.refreshTokenTimer)\n            clearTimeout(this.refreshTokenTimer);\n        if (value <= 0 || !this.autoRefreshToken)\n            return;\n        this.refreshTokenTimer = setTimeout(() => this._callRefreshToken(), value);\n        if (typeof this.refreshTokenTimer.unref === 'function')\n            this.refreshTokenTimer.unref();\n    }\n    /**\n     * Listens for changes to LocalStorage and updates the current session.\n     */\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            // console.debug('Auth multi-tab support is disabled.')\n            return false;\n        }\n        try {\n            window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    if ((_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n                        this._recoverAndRefresh();\n                        this._notifyAllSubscribers('SIGNED_IN');\n                    }\n                    else {\n                        this._removeSession();\n                        this._notifyAllSubscribers('SIGNED_OUT');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n        }\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nexport class PostgrestBuilder {\n    constructor(builder) {\n        Object.assign(this, builder);\n        let _fetch;\n        if (builder.fetch) {\n            _fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            _fetch = crossFetch;\n        }\n        else {\n            _fetch = fetch;\n        }\n        this.fetch = (...args) => _fetch(...args);\n        this.shouldThrowOnError = builder.shouldThrowOnError || false;\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError(throwOnError) {\n        if (throwOnError === null || throwOnError === undefined) {\n            throwOnError = true;\n        }\n        this.shouldThrowOnError = throwOnError;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (typeof this.schema === 'undefined') {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        let res = this.fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then((res) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            if (res.ok) {\n                const isReturnMinimal = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.split(',').includes('return=minimal');\n                if (this.method !== 'HEAD' && !isReturnMinimal) {\n                    const text = yield res.text();\n                    if (!text) {\n                        // discard `text`\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = text;\n                    }\n                    else {\n                        data = JSON.parse(text);\n                    }\n                }\n                const countHeader = (_b = this.headers['Prefer']) === null || _b === void 0 ? void 0 : _b.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_c = res.headers.get('content-range')) === null || _c === void 0 ? void 0 : _c.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                const body = yield res.text();\n                try {\n                    error = JSON.parse(body);\n                }\n                catch (_d) {\n                    error = {\n                        message: body,\n                    };\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status: res.status,\n                statusText: res.statusText,\n                body: data,\n            };\n            return postgrestResponse;\n        }));\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => ({\n                error: {\n                    message: `FetchError: ${fetchError.message}`,\n                    details: '',\n                    hint: '',\n                    code: fetchError.code || '',\n                },\n                data: null,\n                body: null,\n                count: null,\n                status: 400,\n                statusText: 'Bad Request',\n            }));\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=types.js.map","import { PostgrestBuilder } from './types';\n/**\n * Post-filters (transforms)\n */\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     */\n    select(columns = '*') {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        return this;\n    }\n    /**\n     * Orders the result with the specified `column`.\n     *\n     * @param column  The column to order on.\n     * @param ascending  If `true`, the result will be in ascending order.\n     * @param nullsFirst  If `true`, `null`s appear first.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    order(column, { ascending = true, nullsFirst = false, foreignTable, } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'order' : `${foreignTable}.order`;\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}.${nullsFirst ? 'nullsfirst' : 'nullslast'}`);\n        return this;\n    }\n    /**\n     * Limits the result with the specified `count`.\n     *\n     * @param count  The maximum no. of rows to limit to.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limits the result to rows within the specified range, inclusive.\n     *\n     * @param from  The starting index from which to limit the result, inclusive.\n     * @param to  The last index to which to limit the result, inclusive.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Sets the AbortSignal for the fetch request.\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Retrieves only one row from the result. Result must be one row (e.g. using\n     * `limit`), otherwise this will result in an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Retrieves at most one row from the result. Result must be at most one row\n     * (e.g. using `eq` on a UNIQUE column), otherwise this will result in an\n     * error.\n     */\n    maybeSingle() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        const _this = new PostgrestTransformBuilder(this);\n        _this.then = ((onfulfilled, onrejected) => this.then((res) => {\n            var _a, _b;\n            if ((_b = (_a = res.error) === null || _a === void 0 ? void 0 : _a.details) === null || _b === void 0 ? void 0 : _b.includes('Results contain 0 rows')) {\n                return onfulfilled({\n                    error: null,\n                    data: null,\n                    count: res.count,\n                    status: 200,\n                    statusText: 'OK',\n                    body: null,\n                });\n            }\n            return onfulfilled(res);\n        }, onrejected));\n        return _this;\n    }\n    /**\n     * Set the response type to CSV.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    constructor() {\n        super(...arguments);\n        /** @deprecated Use `contains()` instead. */\n        this.cs = this.contains;\n        /** @deprecated Use `containedBy()` instead. */\n        this.cd = this.containedBy;\n        /** @deprecated Use `rangeLt()` instead. */\n        this.sl = this.rangeLt;\n        /** @deprecated Use `rangeGt()` instead. */\n        this.sr = this.rangeGt;\n        /** @deprecated Use `rangeGte()` instead. */\n        this.nxl = this.rangeGte;\n        /** @deprecated Use `rangeLte()` instead. */\n        this.nxr = this.rangeLte;\n        /** @deprecated Use `rangeAdjacent()` instead. */\n        this.adj = this.rangeAdjacent;\n        /** @deprecated Use `overlaps()` instead. */\n        this.ov = this.overlaps;\n    }\n    /**\n     * Finds all rows which doesn't satisfy the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows satisfying at least one of the filters.\n     *\n     * @param filters  The filters to use, separated by commas.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'or' : `${foreignTable}.or`;\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` exactly matches the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    eq(column, value) {\n        this.url.searchParams.append(`${column}`, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` doesn't match the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    neq(column, value) {\n        this.url.searchParams.append(`${column}`, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gt(column, value) {\n        this.url.searchParams.append(`${column}`, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than or\n     * equal to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gte(column, value) {\n        this.url.searchParams.append(`${column}`, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lt(column, value) {\n        this.url.searchParams.append(`${column}`, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than or equal\n     * to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lte(column, value) {\n        this.url.searchParams.append(`${column}`, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case sensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(`${column}`, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case insensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(`${column}`, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * A check for exact equality (null, true, false), finds all rows whose\n     * value on the stated `column` exactly match the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    is(column, value) {\n        this.url.searchParams.append(`${column}`, `is.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is found on the\n     * specified `values`.\n     *\n     * @param column  The column to filter on.\n     * @param values  The values to filter with.\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(`${column}`, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column`\n     * contains the values specified in `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(`${column}`, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column` is\n     * contained by the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to the\n     * left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(`${column}`, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to\n     * the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(`${column}`, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is adjacent to\n     * the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(`${column}`, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose array or range value on the stated `column` overlaps\n     * (has a value in common) with the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(`${column}`, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose text or tsvector value on the stated `column` matches\n     * the tsquery in `query`.\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     * @param type  The type of tsquery conversion to use on `query`.\n     */\n    textSearch(column, query, { config, type = null, } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` instead.\n     */\n    fts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * plainto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'plain'` instead.\n     */\n    plfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `plfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * phraseto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'phrase'` instead.\n     */\n    phfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `phfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * websearch_to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'websearch'` instead.\n     */\n    wfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `wfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose `column` satisfies the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose columns match the specified `query` object.\n     *\n     * @param query  The object to filter with, with column names as keys mapped\n     *               to their filter values.\n     */\n    match(query) {\n        Object.keys(query).forEach((key) => {\n            this.url.searchParams.append(`${key}`, `eq.${query[key]}`);\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, shouldThrowOnError, } = {}) {\n        super({ fetch, shouldThrowOnError });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     * @param head  When set to true, select will void data.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    select(columns = '*', { head = false, count = null, } = {}) {\n        this.method = 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        if (head) {\n            this.method = 'HEAD';\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    insert(values, { upsert = false, onConflict, returning = 'representation', count = null, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [`return=${returning}`];\n        if (upsert)\n            prefersHeaders.push('resolution=merge-duplicates');\n        if (upsert && onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPSERT into the table.\n     *\n     * @param values  The values to insert.\n     * @param onConflict  By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n     * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     * @param ignoreDuplicates  Specifies if duplicate rows should be ignored and not inserted.\n     */\n    upsert(values, { onConflict, returning = 'representation', count = null, ignoreDuplicates = false, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [\n            `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`,\n            `return=${returning}`,\n        ];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPDATE on the table.\n     *\n     * @param values  The values to update.\n     * @param returning  By default the updated record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    update(values, { returning = 'representation', count = null, } = {}) {\n        this.method = 'PATCH';\n        const prefersHeaders = [`return=${returning}`];\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs a DELETE on the table.\n     *\n     * @param returning  If `true`, return the deleted row(s) in the response.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    delete({ returning = 'representation', count = null, } = {}) {\n        this.method = 'DELETE';\n        const prefersHeaders = [`return=${returning}`];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, shouldThrowOnError, } = {}) {\n        super({ fetch, shouldThrowOnError });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Perform a function call.\n     */\n    rpc(params, { head = false, count = null, } = {}) {\n        if (head) {\n            this.method = 'HEAD';\n            if (params) {\n                Object.entries(params).forEach(([name, value]) => {\n                    this.url.searchParams.append(name, value);\n                });\n            }\n        }\n        else {\n            this.method = 'POST';\n            this.body = params;\n        }\n        if (count) {\n            if (this.headers['Prefer'] !== undefined)\n                this.headers['Prefer'] += `,count=${count}`;\n            else\n                this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestRpcBuilder.js.map","// generated by genversion\nexport const version = '0.37.2';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './lib/PostgrestQueryBuilder';\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder';\nimport { DEFAULT_HEADERS } from './lib/constants';\nexport default class PostgrestClient {\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url  URL of the PostgREST endpoint.\n     * @param headers  Custom headers.\n     * @param schema  Postgres schema to switch to.\n     */\n    constructor(url, { headers = {}, schema, fetch, throwOnError, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n        this.shouldThrowOnError = throwOnError;\n    }\n    /**\n     * Authenticates the request with JWT.\n     *\n     * @param token  The JWT token to use.\n     */\n    auth(token) {\n        this.headers['Authorization'] = `Bearer ${token}`;\n        return this;\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table  The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.url}/${table}`;\n        return new PostgrestQueryBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head  When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const url = `${this.url}/rpc/${fn}`;\n        return new PostgrestRpcBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        }).rpc(params, { head, count });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","export const version = '1.6.2';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\n//# sourceMappingURL=constants.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nimport RealtimeSubscription from '../RealtimeSubscription';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket.makeRef();\n        this.refEvent = this.channel.replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        if (this.channel instanceof RealtimeSubscription) {\n            this.channel.on(this.refEvent, callback);\n        }\n        else {\n            this.channel.on(this.refEvent, {}, callback);\n        }\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel.trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        if (this.channel instanceof RealtimeSubscription) {\n            this.channel.off(this.refEvent);\n        }\n        else {\n            this.channel.off(this.refEvent, {});\n        }\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nexport default class RealtimeSubscription {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, callback);\n    }\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, (reason) => callback(reason));\n    }\n    on(event, callback) {\n        this.bindings.push({ event, callback });\n    }\n    off(event) {\n        this.bindings = this.bindings.filter((bind) => bind.event !== event);\n    }\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        let onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.socket.leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    trigger(event, payload, ref) {\n        let { close, error, leave, join } = CHANNEL_EVENTS;\n        let events = [close, error, leave, join];\n        if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        let handledPayload = this.onMessage(event, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            // Bind all events if the user specifies a wildcard.\n            if (bind.event === '*') {\n                return event === (payload === null || payload === void 0 ? void 0 : payload.type);\n            }\n            else {\n                return bind.event === event;\n            }\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n}\n//# sourceMappingURL=RealtimeSubscription.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence\n     * @param channel - The RealtimeSubscription\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel.on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel.joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel.on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server\n     * with the client's state. An optional `onJoin` and `onLeave` callback can\n     * be provided to react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceIds = newPresences.map((m) => m.presence_id);\n                const curPresenceIds = currentPresences.map((m) => m.presence_id);\n                const joinedPresences = newPresences.filter((m) => curPresenceIds.indexOf(m.presence_id) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceIds.indexOf(m.presence_id) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     *\n     * Used to sync a diff of presence join and leave\n     * events from the server, as they happen. Like `syncState`, `syncDiff`\n     * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n     * joining or leaving from a device.\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            const currentPresences = state[key];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences) {\n                const joinedPresenceIds = state[key].map((m) => m.presence_id);\n                const curPresences = currentPresences.filter((m) => joinedPresenceIds.indexOf(m.presence_id) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceIdsToRemove = leftPresences.map((m) => m.presence_id);\n            currentPresences = currentPresences.filter((m) => presenceIdsToRemove.indexOf(m.presence_id) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /**\n     * Returns the array of presences, with selected metadata.\n     */\n    static list(presences, chooser) {\n        if (!chooser) {\n            chooser = (_key, pres) => pres;\n        }\n        return this.map(presences, (key, presences) => chooser(key, presences));\n    }\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_id'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_id: '2', user_id: 1 },\n     *    { presence_id: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_id'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    list(by) {\n        return RealtimePresence.list(this.state, by);\n    }\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel.joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nexport default class RealtimeChannel {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n    }\n    list() {\n        return this.presence.list();\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            const configs = this.bindings.reduce((acc, binding) => {\n                const { type } = binding;\n                if (![\n                    'phx_close',\n                    'phx_error',\n                    'phx_reply',\n                    'presence_diff',\n                    'presence_state',\n                ].includes(type)) {\n                    acc[type] = binding;\n                }\n                return acc;\n            }, {});\n            if (Object.keys(configs).length) {\n                this.updateJoinPayload({ configs });\n            }\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    on(type, eventFilter, callback) {\n        this.bindings.push({\n            type,\n            eventFilter: eventFilter !== null && eventFilter !== void 0 ? eventFilter : {},\n            callback: callback !== null && callback !== void 0 ? callback : (() => { }),\n        });\n    }\n    off(type, eventFilter) {\n        this.bindings = this.bindings.filter((bind) => {\n            return !(bind.type === type &&\n                RealtimeChannel.isEqual(bind.eventFilter, eventFilter));\n        });\n    }\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        let onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.socket.leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    trigger(type, payload, ref) {\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(type) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        const handledPayload = this.onMessage(type, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            var _a, _b;\n            return ((bind === null || bind === void 0 ? void 0 : bind.type) === type &&\n                (((_a = bind === null || bind === void 0 ? void 0 : bind.eventFilter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_b = bind === null || bind === void 0 ? void 0 : bind.eventFilter) === null || _b === void 0 ? void 0 : _b.event) === (payload === null || payload === void 0 ? void 0 : payload.event)));\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    send(payload) {\n        const push = this.push(payload.type, payload);\n        return new Promise((resolve, reject) => {\n            push.receive('ok', () => resolve('ok'));\n            push.receive('timeout', () => reject('timeout'));\n        });\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { w3cwebsocket } from 'websocket';\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, } from './lib/constants';\nimport Timer from './lib/timer';\nimport Serializer from './lib/serializer';\nimport RealtimeSubscription from './RealtimeSubscription';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = w3cwebsocket;\n        this.heartbeatIntervalMs = 30000;\n        this.longpollerTimeout = 20000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        if (options === null || options === void 0 ? void 0 : options.longpollerTimeout)\n            this.longpollerTimeout = options.longpollerTimeout;\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs) ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode) ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode) ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this.endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this.onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        return new Promise((resolve, _reject) => {\n            try {\n                if (this.conn) {\n                    this.conn.onclose = function () { }; // noop\n                    if (code) {\n                        this.conn.close(code, reason || '');\n                    }\n                    else {\n                        this.conn.close();\n                    }\n                    this.conn = null;\n                    // remove open handles\n                    this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n                    this.reconnectTimer.reset();\n                }\n                resolve({ error: null, data: true });\n            }\n            catch (error) {\n                resolve({ error: error, data: false });\n            }\n        });\n    }\n    /**\n     * Logs the message. Override `this.logger` for specialized logging.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Registers a callback for connection state change event.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket opened.\"))\n     */\n    onOpen(callback) {\n        this.stateChangeCallbacks.open.push(callback);\n    }\n    /**\n     * Registers a callbacks for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket closed.\"))\n     */\n    onClose(callback) {\n        this.stateChangeCallbacks.close.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen((error) => console.log(\"An error occurred\"))\n     */\n    onError(callback) {\n        this.stateChangeCallbacks.error.push(callback);\n    }\n    /**\n     * Calls a function any time a message is received.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onMessage((message) => console.log(message))\n     */\n    onMessage(callback) {\n        this.stateChangeCallbacks.message.push(callback);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return 'connecting';\n            case SOCKET_STATES.open:\n                return 'open';\n            case SOCKET_STATES.closing:\n                return 'closing';\n            default:\n                return 'closed';\n        }\n    }\n    /**\n     * Retuns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === 'open';\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     */\n    remove(channel) {\n        this.channels = this.channels.filter((c) => c.joinRef() !== channel.joinRef());\n    }\n    channel(topic, chanParams = { isNewVersion: false }) {\n        const { isNewVersion } = chanParams, params = __rest(chanParams, [\"isNewVersion\"]);\n        const chan = isNewVersion\n            ? new RealtimeChannel(topic, Object.assign({}, params), this)\n            : new RealtimeSubscription(topic, Object.assign({}, params), this);\n        if (chan instanceof RealtimeChannel) {\n            chan.presence.onJoin((key, currentPresences, newPresences) => {\n                chan.trigger('presence', {\n                    event: 'JOIN',\n                    key,\n                    currentPresences,\n                    newPresences,\n                });\n            });\n            chan.presence.onLeave((key, currentPresences, leftPresences) => {\n                chan.trigger('presence', {\n                    event: 'LEAVE',\n                    key,\n                    currentPresences,\n                    leftPresences,\n                });\n            });\n            chan.presence.onSync(() => {\n                chan.trigger('presence', { event: 'SYNC' });\n            });\n        }\n        this.channels.push(chan);\n        return chan;\n    }\n    push(data) {\n        let { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if ((ref && ref === this.pendingHeartbeatRef) ||\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel.isMember(topic))\n                .forEach((channel) => channel.trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /**\n     * Returns the URL of the websocket.\n     */\n    endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n    makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        try {\n            this.channels.forEach((channel) => {\n                token && channel.updateJoinPayload({ user_token: token });\n                if (channel.joinedOnce && channel.isJoined()) {\n                    channel.push(CHANNEL_EVENTS.access_token, { access_token: token });\n                }\n            });\n        }\n        catch (error) {\n            console.log('setAuth error', error);\n        }\n    }\n    leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c.isJoined() || c.isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    _onConnOpen() {\n        this.log('transport', `connected to ${this.endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel.trigger(CHANNEL_EVENTS.error));\n    }\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this.makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","import { Transformers } from '@supabase/realtime-js';\nexport class SupabaseRealtimeClient {\n    constructor(socket, headers, schema, tableName) {\n        const chanParams = {};\n        const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`;\n        const userToken = headers['Authorization'].split(' ')[1];\n        if (userToken) {\n            chanParams['user_token'] = userToken;\n        }\n        this.subscription = socket.channel(topic, chanParams);\n    }\n    getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n    /**\n     * The event you want to listen to.\n     *\n     * @param event The event\n     * @param callback A callback function that is called whenever the event occurs.\n     */\n    on(event, callback) {\n        this.subscription.on(event, (payload) => {\n            let enrichedPayload = {\n                schema: payload.schema,\n                table: payload.table,\n                commit_timestamp: payload.commit_timestamp,\n                eventType: payload.type,\n                new: {},\n                old: {},\n                errors: payload.errors,\n            };\n            enrichedPayload = Object.assign(Object.assign({}, enrichedPayload), this.getPayloadRecords(payload));\n            callback(enrichedPayload);\n        });\n        return this;\n    }\n    /**\n     * Enables the subscription.\n     */\n    subscribe(callback = () => { }) {\n        this.subscription.onError((e) => callback('SUBSCRIPTION_ERROR', e));\n        this.subscription.onClose(() => callback('CLOSED'));\n        this.subscription\n            .subscribe()\n            .receive('ok', () => callback('SUBSCRIBED'))\n            .receive('error', (e) => callback('SUBSCRIPTION_ERROR', e))\n            .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'));\n        return this.subscription;\n    }\n}\n//# sourceMappingURL=SupabaseRealtimeClient.js.map","import { PostgrestQueryBuilder } from '@supabase/postgrest-js';\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient';\nexport class SupabaseQueryBuilder extends PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, realtime, table, fetch, shouldThrowOnError, }) {\n        super(url, { headers, schema, fetch, shouldThrowOnError });\n        this._subscription = null;\n        this._realtime = realtime;\n        this._headers = headers;\n        this._schema = schema;\n        this._table = table;\n    }\n    /**\n     * Subscribe to realtime changes in your database.\n     * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n     * @param callback A callback that will handle the payload that is sent whenever your database changes.\n     */\n    on(event, callback) {\n        if (!this._realtime.isConnected()) {\n            this._realtime.connect();\n        }\n        if (!this._subscription) {\n            this._subscription = new SupabaseRealtimeClient(this._realtime, this._headers, this._schema, this._table);\n        }\n        return this._subscription.on(event, callback);\n    }\n}\n//# sourceMappingURL=SupabaseQueryBuilder.js.map","// generated by genversion\nexport const version = '0.0.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve(result);\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","import crossFetch from 'cross-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from './constants';\nimport { get, post, put, remove } from './fetch';\nimport { resolveFetch } from './helpers';\nexport class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing product.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = { public: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data: data.name, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Updates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, remove } from './fetch';\nimport { resolveFetch } from './helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, {\n                    method,\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    // const data = await res.json()\n                    // temporary fix till backend is updated to the latest storage-api version\n                    return { data: { Key: _path }, error: null };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Copies an existing file.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    copy(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Create signed URL to download file without requiring permissions. This URL can be valid for a set number of seconds.\n     *\n     * @param path The file path to be downloaded, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     */\n    createSignedUrl(path, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, { expiresIn }, { headers: this.headers });\n                const signedURL = `${this.url}${data.signedURL}`;\n                data = { signedURL };\n                return { data, error: null, signedURL };\n            }\n            catch (error) {\n                return { data: null, error, signedURL: null };\n            }\n        });\n    }\n    /**\n     * Create signed URLs to download files without requiring permissions. These URLs can be valid for a set number of seconds.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     */\n    createSignedUrls(paths, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedURL: datum.signedURL ? `${this.url}${datum.signedURL}` : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Downloads a file.\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    download(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieve URLs for assets in public buckets\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    getPublicUrl(path) {\n        try {\n            const _path = this._getFinalPath(path);\n            const publicURL = `${this.url}/object/public/${_path}`;\n            const data = { publicURL };\n            return { data, error: null, publicURL };\n        }\n        catch (error) {\n            return { data: null, error, publicURL: null };\n        }\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to be deleted, including the path and file name. For example [`folder/image.png`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(id: string): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await get(`${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await post(`${this.url}/metadata/${id}`, { ...meta }, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     * @param options Search options, including `limit`, `offset`, and `sortBy`.\n     * @param parameters Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","import { StorageBucketApi, StorageFileApi } from './lib';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @params token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - the name of the function to invoke\n     * @param invokeOptions - object with the following properties\n     * `headers`: object representing the headers to send with the request\n     * `body`: the body of the request\n     * `responseType`: how the response should be parsed. The default is `json`\n     */\n    invoke(functionName, invokeOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, body } = invokeOptions !== null && invokeOptions !== void 0 ? invokeOptions : {};\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: 'POST',\n                    headers: Object.assign({}, this.headers, headers),\n                    body,\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    return { data: null, error: new Error(yield response.text()) };\n                }\n                let data;\n                const { responseType } = invokeOptions !== null && invokeOptions !== void 0 ? invokeOptions : {};\n                if (!responseType || responseType === 'json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'arrayBuffer') {\n                    data = yield response.arrayBuffer();\n                }\n                else if (responseType === 'blob') {\n                    data = yield response.blob();\n                }\n                else {\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","import crossFetch from 'cross-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { stripTrailingSlash, isBrowser } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder';\nimport { SupabaseStorageClient } from '@supabase/storage-js';\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient } from '@supabase/postgrest-js';\nimport { RealtimeClient } from '@supabase/realtime-js';\nconst DEFAULT_OPTIONS = {\n    schema: 'public',\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.headers Any additional headers to send with each network request.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.restUrl = `${_supabaseUrl}/rest/v1`;\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace('http', 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/);\n        if (isPlatform) {\n            const urlParts = _supabaseUrl.split('.');\n            this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`;\n        }\n        else {\n            this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n        }\n        this.schema = settings.schema;\n        this.multiTab = settings.multiTab;\n        this.fetch = settings.fetch;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), options === null || options === void 0 ? void 0 : options.headers);\n        this.shouldThrowOnError = settings.shouldThrowOnError || false;\n        this.auth = this._initSupabaseAuthClient(settings);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this._listenForAuthEvents();\n        this._listenForMultiTabEvents();\n        // In the future we might allow the user to pass in a logger to receive these events.\n        // this.realtime.onOpen(() => console.log('OPEN'))\n        // this.realtime.onClose(() => console.log('CLOSED'))\n        // this.realtime.onError((e: Error) => console.log('Socket error', e))\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl, {\n            headers: this._getAuthHeaders(),\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch);\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.restUrl}/${table}`;\n        return new SupabaseQueryBuilder(url, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            realtime: this.realtime,\n            table,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head   When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const rest = this._initPostgRESTClient();\n        return rest.rpc(fn, params, { head, count });\n    }\n    /**\n     * Closes and removes all subscriptions and returns a list of removed\n     * subscriptions and their errors.\n     */\n    removeAllSubscriptions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allSubs = this.getSubscriptions().slice();\n            const allSubPromises = allSubs.map((sub) => this.removeSubscription(sub));\n            const allRemovedSubs = yield Promise.all(allSubPromises);\n            return allRemovedSubs.map(({ error }, i) => {\n                return {\n                    data: { subscription: allSubs[i] },\n                    error,\n                };\n            });\n        });\n    }\n    /**\n     * Closes and removes a subscription and returns the number of open subscriptions.\n     *\n     * @param subscription The subscription you want to close and remove.\n     */\n    removeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { error } = yield this._closeSubscription(subscription);\n            const allSubs = this.getSubscriptions();\n            const openSubCount = allSubs.filter((chan) => chan.isJoined()).length;\n            if (allSubs.length === 0)\n                yield this.realtime.disconnect();\n            return { data: { openSubscriptions: openSubCount }, error };\n        });\n    }\n    _closeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let error = null;\n            if (!subscription.isClosed()) {\n                const { error: unsubError } = yield this._unsubscribeSubscription(subscription);\n                error = unsubError;\n            }\n            this.realtime.remove(subscription);\n            return { error };\n        });\n    }\n    _unsubscribeSubscription(subscription) {\n        return new Promise((resolve) => {\n            subscription\n                .unsubscribe()\n                .receive('ok', () => resolve({ error: null }))\n                .receive('error', (error) => resolve({ error }))\n                .receive('timeout', () => resolve({ error: new Error('timed out') }));\n        });\n    }\n    /**\n     * Returns an array of all your subscriptions.\n     */\n    getSubscriptions() {\n        return this.realtime.channels;\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, localStorage, headers, fetch, }) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, headers), authHeaders),\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            localStorage,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.params), { apikey: this.supabaseKey }) }));\n    }\n    _initPostgRESTClient() {\n        return new PostgrestClient(this.restUrl, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            fetch: this.fetch,\n            throwOnError: this.shouldThrowOnError,\n        });\n    }\n    _getAuthHeaders() {\n        var _a, _b;\n        const headers = Object.assign({}, this.headers);\n        const authBearer = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        headers['apikey'] = this.supabaseKey;\n        headers['Authorization'] = headers['Authorization'] || `Bearer ${authBearer}`;\n        return headers;\n    }\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return null;\n        }\n        try {\n            return window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a, _b, _c;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    const accessToken = (_b = (_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                    const previousAccessToken = (_c = this.auth.session()) === null || _c === void 0 ? void 0 : _c.access_token;\n                    if (!accessToken) {\n                        this._handleTokenChanged('SIGNED_OUT', accessToken, 'STORAGE');\n                    }\n                    else if (!previousAccessToken && accessToken) {\n                        this._handleTokenChanged('SIGNED_IN', accessToken, 'STORAGE');\n                    }\n                    else if (previousAccessToken !== accessToken) {\n                        this._handleTokenChanged('TOKEN_REFRESHED', accessToken, 'STORAGE');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n            return null;\n        }\n    }\n    _listenForAuthEvents() {\n        let { data } = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token);\n            // Ideally we should call this.auth.recoverSession() - need to make public\n            // to trigger a \"SIGNED_IN\" event on this client.\n            if (source == 'STORAGE')\n                this.auth.setAuth(token);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","// helpers.ts\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\n//# sourceMappingURL=helpers.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport * from '@supabase/realtime-js';\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\nexport { createClient, SupabaseClient, };\n//# sourceMappingURL=index.js.map","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\n\nexport const commentsData = writable([]);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction md5cycle(x, k) {\n    var a = x[0];\n    var b = x[1];\n    var c = x[2];\n    var d = x[3];\n    a = ff(a, b, c, d, k[0], 7, -680876936);\n    d = ff(d, a, b, c, k[1], 12, -389564586);\n    c = ff(c, d, a, b, k[2], 17, 606105819);\n    b = ff(b, c, d, a, k[3], 22, -1044525330);\n    a = ff(a, b, c, d, k[4], 7, -176418897);\n    d = ff(d, a, b, c, k[5], 12, 1200080426);\n    c = ff(c, d, a, b, k[6], 17, -1473231341);\n    b = ff(b, c, d, a, k[7], 22, -45705983);\n    a = ff(a, b, c, d, k[8], 7, 1770035416);\n    d = ff(d, a, b, c, k[9], 12, -1958414417);\n    c = ff(c, d, a, b, k[10], 17, -42063);\n    b = ff(b, c, d, a, k[11], 22, -1990404162);\n    a = ff(a, b, c, d, k[12], 7, 1804603682);\n    d = ff(d, a, b, c, k[13], 12, -40341101);\n    c = ff(c, d, a, b, k[14], 17, -1502002290);\n    b = ff(b, c, d, a, k[15], 22, 1236535329);\n    a = gg(a, b, c, d, k[1], 5, -165796510);\n    d = gg(d, a, b, c, k[6], 9, -1069501632);\n    c = gg(c, d, a, b, k[11], 14, 643717713);\n    b = gg(b, c, d, a, k[0], 20, -373897302);\n    a = gg(a, b, c, d, k[5], 5, -701558691);\n    d = gg(d, a, b, c, k[10], 9, 38016083);\n    c = gg(c, d, a, b, k[15], 14, -660478335);\n    b = gg(b, c, d, a, k[4], 20, -405537848);\n    a = gg(a, b, c, d, k[9], 5, 568446438);\n    d = gg(d, a, b, c, k[14], 9, -1019803690);\n    c = gg(c, d, a, b, k[3], 14, -187363961);\n    b = gg(b, c, d, a, k[8], 20, 1163531501);\n    a = gg(a, b, c, d, k[13], 5, -1444681467);\n    d = gg(d, a, b, c, k[2], 9, -51403784);\n    c = gg(c, d, a, b, k[7], 14, 1735328473);\n    b = gg(b, c, d, a, k[12], 20, -1926607734);\n    a = hh(a, b, c, d, k[5], 4, -378558);\n    d = hh(d, a, b, c, k[8], 11, -2022574463);\n    c = hh(c, d, a, b, k[11], 16, 1839030562);\n    b = hh(b, c, d, a, k[14], 23, -35309556);\n    a = hh(a, b, c, d, k[1], 4, -1530992060);\n    d = hh(d, a, b, c, k[4], 11, 1272893353);\n    c = hh(c, d, a, b, k[7], 16, -155497632);\n    b = hh(b, c, d, a, k[10], 23, -1094730640);\n    a = hh(a, b, c, d, k[13], 4, 681279174);\n    d = hh(d, a, b, c, k[0], 11, -358537222);\n    c = hh(c, d, a, b, k[3], 16, -722521979);\n    b = hh(b, c, d, a, k[6], 23, 76029189);\n    a = hh(a, b, c, d, k[9], 4, -640364487);\n    d = hh(d, a, b, c, k[12], 11, -421815835);\n    c = hh(c, d, a, b, k[15], 16, 530742520);\n    b = hh(b, c, d, a, k[2], 23, -995338651);\n    a = ii(a, b, c, d, k[0], 6, -198630844);\n    d = ii(d, a, b, c, k[7], 10, 1126891415);\n    c = ii(c, d, a, b, k[14], 15, -1416354905);\n    b = ii(b, c, d, a, k[5], 21, -57434055);\n    a = ii(a, b, c, d, k[12], 6, 1700485571);\n    d = ii(d, a, b, c, k[3], 10, -1894986606);\n    c = ii(c, d, a, b, k[10], 15, -1051523);\n    b = ii(b, c, d, a, k[1], 21, -2054922799);\n    a = ii(a, b, c, d, k[8], 6, 1873313359);\n    d = ii(d, a, b, c, k[15], 10, -30611744);\n    c = ii(c, d, a, b, k[6], 15, -1560198380);\n    b = ii(b, c, d, a, k[13], 21, 1309151649);\n    a = ii(a, b, c, d, k[4], 6, -145523070);\n    d = ii(d, a, b, c, k[11], 10, -1120210379);\n    c = ii(c, d, a, b, k[2], 15, 718787259);\n    b = ii(b, c, d, a, k[9], 21, -343485551);\n    x[0] = add32(a, x[0]);\n    x[1] = add32(b, x[1]);\n    x[2] = add32(c, x[2]);\n    x[3] = add32(d, x[3]);\n}\nfunction cmn(q, a, b, x, s, t) {\n    a = add32(add32(a, q), add32(x, t));\n    return add32((a << s) | (a >>> (32 - s)), b);\n}\nfunction ff(a, b, c, d, x, s, t) {\n    return cmn((b & c) | (~b & d), a, b, x, s, t);\n}\nfunction gg(a, b, c, d, x, s, t) {\n    return cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\nfunction hh(a, b, c, d, x, s, t) {\n    return cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction ii(a, b, c, d, x, s, t) {\n    return cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nfunction md51(s) {\n    var n = s.length;\n    var state = [1732584193, -271733879, -1732584194, 271733878];\n    var i;\n    for (i = 64; i <= s.length; i += 64) {\n        md5cycle(state, md5blk(s.substring(i - 64, i)));\n    }\n    s = s.substring(i - 64);\n    var tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    for (i = 0; i < s.length; i++)\n        tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);\n    tail[i >> 2] |= 0x80 << (i % 4 << 3);\n    if (i > 55) {\n        md5cycle(state, tail);\n        for (i = 0; i < 16; i++)\n            tail[i] = 0;\n    }\n    tail[14] = n * 8;\n    md5cycle(state, tail);\n    return state;\n}\nfunction md5blk(s) {\n    var md5blks = [];\n    for (var i = 0; i < 64; i += 4) {\n        md5blks[i >> 2] =\n            s.charCodeAt(i) +\n                (s.charCodeAt(i + 1) << 8) +\n                (s.charCodeAt(i + 2) << 16) +\n                (s.charCodeAt(i + 3) << 24);\n    }\n    return md5blks;\n}\nvar hex_chr = \"0123456789abcdef\".split(\"\");\nfunction rhex(n) {\n    var s = \"\";\n    for (var j = 0; j < 4; j++)\n        s += hex_chr[(n >> (j * 8 + 4)) & 0x0f] + hex_chr[(n >> (j * 8)) & 0x0f];\n    return s;\n}\nfunction hex(x) {\n    var num = [];\n    for (var i = 0; i < x.length; i++)\n        num[i] = rhex(x[i]);\n    return num.join(\"\");\n}\nfunction md5(s) {\n    return hex(md51(s));\n}\nexports.md5 = md5;\nfunction add32(a, b) {\n    return (a + b) & 0xffffffff;\n}\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar md5hash_1 = require(\"./md5hash\");\nfunction hexToRgb(hex) {\n    var bigint = parseInt(hex, 16);\n    var r = (bigint >> 16) & 255;\n    var g = (bigint >> 8) & 255;\n    var b = bigint & 255;\n    return r + \",\" + g + \",\" + b;\n}\nfunction invertHex(hex) {\n    return (Number(\"0x1\" + hex) ^ 0xffffff).toString(16).substr(1).toUpperCase();\n}\nexports.invertHex = invertHex;\nfunction generatePath(curveVal, posVal, index) {\n    var cVal = curveVal;\n    var bigC = 300 - cVal;\n    var pos = posVal;\n    return \"m 150 \" + (100 + pos + 200 * index) + \" Q \" + bigC + \" \" + cVal + \" \" + (200 - pos - 200 * index) + \" 150 Q \" + bigC + \" \" + bigC + \" 150 \" + (200 - pos - 200 * index) + \" Q \" + cVal + \" \" + bigC + \" \" + (100 + pos + 200 * index) + \" 150 Q \" + cVal + \" \" + cVal + \" 150 \" + (100 + pos + 200 * index) + \" z\";\n}\nexports.generatePath = generatePath;\nfunction hydrateSVGBlog(data) {\n    return \"<svg width=\\\"300\\\" height=\\\"300\\\" viewBox=\\\"0 0 300 300\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect id=\\\"bg\\\" width=\\\"300\\\" height=\\\"300\\\" fill=\\\"rgb(\" + hexToRgb(data.background) + \")\\\" /><path d=\\\"\" + data.paths[0] + \"\\\" fill=\\\"rgb(\" + hexToRgb(data.colors[0]) + \")\\\" /><path d=\\\"\" + data.paths[1] + \"\\\" fill=\\\"rgb(\" + hexToRgb(data.colors[1]) + \")\\\" /><path d=\\\"\" + data.paths[2] + \"\\\" fill=\\\"rgb(\" + hexToRgb(data.colors[2]) + \")\\\" /></svg>\";\n}\nfunction generateFromString(id) {\n    var idArr = md5hash_1.md5(id)\n        .split(\"\")\n        .filter(function (el) { return el !== \"-\"; });\n    var backgroundColor = idArr.splice(0, 6).join(\"\");\n    var elColor = idArr.splice(idArr.length - 6, idArr.length).join(\"\");\n    var arr = __spreadArrays(Array(10)).map(function () {\n        return parseInt(idArr.splice(0, 2).join(\"\"), 16);\n    });\n    var data = {\n        paths: [\n            generatePath(arr[0], arr[1], 2),\n            generatePath(arr[2], arr[3], 1),\n            generatePath(arr[4], arr[5], 0),\n        ],\n        colors: [elColor, invertHex(elColor), invertHex(backgroundColor)],\n        background: backgroundColor,\n    };\n    return hydrateSVGBlog(data);\n}\nexports.generateFromString = generateFromString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar generateFromString_1 = require(\"./generateFromString\");\nexports.generateFromString = generateFromString_1.generateFromString;\n","<script>\n  import { createClient } from \"@supabase/supabase-js\";\n  import { commentsData } from \"../stores.js\";\n  import { generateFromString } from \"generate-avatar\";\n\n  export let hostURL;\n  export let postPath;\n  export let supabaseUrl;\n  export let anonKey;\n  export const supabase = createClient(supabaseUrl, anonKey);\n\n  let loading = true;\n  let name;\n  let email;\n  let comment;\n  let success = false;\n\n  const getComments = async () => {\n    const { data, error } = await supabase\n      .from(\"comments\")\n      .select()\n      .order(\"created_at\", { ascending: false })\n      .filter(\"postURL\", \"in\", `(${postPath})`)\n      .filter(\"show\", \"is\", true);\n\n    commentsData.set(data);\n\n    if (data) {\n      loading = false;\n    }\n\n    if (error) {\n      console.log(error);\n    }\n  };\n\n  const checkAndInsert = async () => {\n    if (name && comment) {\n      const { data, error } = await supabase.from(\"comments\").insert({\n        postURL: postPath,\n        name: name,\n        email: email,\n        comment: comment,\n        show: true,\n      });\n\n      await sendToTelegram(name, email, comment, postPath);\n\n      if (data) {\n        success = true;\n        name = \"\";\n        email = \"\";\n        comment = \"\";\n        getComments();\n      }\n\n      if (error) {\n        console.log(error);\n      }\n    } else {\n      alert(\"请填写完整信息\");\n    }\n  };\n\n  async function sendToTelegram(name, email, comment, postPath) {\n    fetch(\"/api/sendtotg\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        comment: comment,\n        url: hostURL + postPath,\n      })\n    });\n  }\n\n  function formatDate(date, local) {\n    const d = new Date(date);\n    const options = { year: \"numeric\", month: \"short\", day: \"numeric\" };\n    const res = d.toLocaleDateString(local, options);\n    return local === \"zh\"\n      ? res.replace(\"年\", \" 年 \").replace(\"月\", \" 月 \").replace(\"日\", \" 日\")\n      : res;\n  }\n\n  getComments();\n</script>\n\n<div>\n  <!-- Create a comment box with name, email and comment textarea with tailwindcss -->\n  <div class=\"max-w-screen-md grid sm:grid-cols-2 gap-4 mx-auto\">\n    <div>\n      <input\n        name=\"name\"\n        id=\"name\"\n        type=\"text\"\n        required\n        bind:value={name}\n        placeholder=\"你的昵称\"\n        class=\"appearance-none block w-full bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-lg py-3 px-4 leading-tight focus:outline-none focus:bg-white\"\n      />\n    </div>\n    <div>\n      <input\n        name=\"email\"\n        id=\"mail\"\n        type=\"text\"\n        required\n        bind:value={email}\n        placeholder=\"你的邮箱(可选)*\"\n        class=\"appearance-none block w-full bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-lg py-3 px-4 leading-tight focus:outline-none focus:bg-white\"\n      />\n    </div>\n    <div class=\"sm:col-span-2\">\n      <textarea\n        name=\"comment\"\n        id=\"comment\"\n        type=\"text\"\n        required\n        bind:value={comment}\n        placeholder=\"评论内容\"\n        class=\"h-44 appearance-none block w-full bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-lg py-3 px-4 leading-tight focus:outline-none focus:bg-white\"\n      />\n    </div>\n    <div class=\"sm:col-span-2 flex justify-between items-center\">\n      <button\n        on:click={() => {\n          checkAndInsert();\n        }}\n        class=\"inline-block bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-center rounded-lg outline-none transition duration-100 px-8 py-3\"\n      >\n        <p class=\"text-gray-400 h-5\">提交</p>\n      </button>\n      <p class=\"mb-2 text-gray-400 text-xs\">\n        *如需回复, 请填写邮箱或其他有效联系方式.\n      </p>\n    </div>\n  </div>\n\n  <div class=\"mx-auto max-w-screen-md\">\n    <div class=\"mt-10 space-y-4\">\n      {#if loading}\n        <div class=\"w-full\">\n          <div class=\"animate-pulse flex space-x-4\">\n            <div class=\"rounded-full bg-gray-400 h-10 w-10\" />\n            <div class=\"flex-1 space-y-4\">\n              <div class=\"h-2 w-20 bg-gray-400 rounded\" />\n              <div class=\"space-y-4\">\n                <div class=\"grid grid-cols-3 gap-4\">\n                  <div class=\"h-2 bg-gray-400 rounded col-span-1\" />\n                  <div class=\"h-2 bg-gray-400 rounded col-span-2\" />\n                </div>\n                <div class=\"h-2 bg-gray-400 rounded\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      {/if}\n      {#each $commentsData as comment}\n        <div class=\"flex\">\n          <div class=\"flex-shrink-0 mr-3\">\n            <img\n              alt=\"avatar\"\n              class=\"mt-2 rounded-full w-8 h-8 sm:w-10 sm:h-10\"\n              src={`data:image/svg+xml;utf8,${generateFromString(\n                comment.email || comment.name\n              )}`}\n            />\n          </div>\n          <div\n            class=\"w-full bg-gray-100 dark:bg-gray-700 rounded-lg px-4 py-2 sm:px-6 sm:py-4 leading-relaxed\"\n          >\n            <strong>{comment.name}</strong>\n            <span class=\"text-xs text-gray-400\"\n              >{formatDate(comment.created_at, \"zh\")}</span\n            >\n            <p class=\"text-sm\">\n              {comment.comment}\n            </p>\n          </div>\n        </div>\n      {/each}\n    </div>\n  </div>\n</div>\n\n<style>\n</style>\n","<script>\n  import CommentBox from \"./components/CommentBox.svelte\";\n  const postPath = window.location.pathname;\n  const hostURL = window.location.host;\n  export let appUrl;\n  export let supabaseUrl;\n  export let anonKey;\n\n  const Props = {\n    hostURL,\n    postPath,\n    supabaseUrl,\n    anonKey\n  };\n</script>\n\n{#if hostURL === appUrl}\n  <CommentBox {...Props} />\n{:else}\n  <h1 class=\"text-6xl text-red-500 p-5\">data-url 配置错误</h1>\n{/if}\n\n<style>\n</style>\n","import App from \"./App.svelte\";\n\nlet comments = document.getElementById(\"comments\");\nlet appUrl = comments.getAttribute(\"data-url\") || \"localhost:8080\";\nlet supabaseUrl = comments.getAttribute(\"supabase-url\");\nlet anonKey = comments.getAttribute(\"anon-key\");\n\nconst app = new App({\n  target: comments,\n  props: {\n    appUrl: appUrl,\n    supabaseUrl: supabaseUrl,\n    anonKey: anonKey\n  },\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","DEFAULT_HEADERS","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","result","done","apply","_getErrorMessage","err","msg","message","error_description","error","JSON","stringify","_handleRequest","fetcher","method","body","params","headers","_getRequestParams","ok","noResolveJson","json","catch","status","handleError","get","post","put","STORAGE_KEY","COOKIE_OPTIONS","lifetime","domain","path","sameSite","serializeCookie","cookie","secure","_a","_b","_c","val","opt","enc","encodeURIComponent","fieldContentRegExp","TypeError","test","str","maxAge","isNaN","isFinite","Math","floor","expires","toUTCString","httpOnly","toLowerCase","serialize","Date","now","getCookieString","req","res","cookies","strCookies","host","Error","split","endsWith","isSecureEnvironment","previousCookies","getHeader","prototype","setCookies","setHeader","global","self","__self__","F","fetch","DOMException","exports","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","toString","call","normalizeName","String","normalizeValue","iteratorFor","items","iterator","shift","undefined","Headers","isArray","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","arrayBuffer","readAsText","chars","fromCharCode","join","readArrayBufferAsText","formData","decode","parse","oldValue","hasOwnProperty","values","entries","methods","Request","upcased","credentials","mode","signal","toUpperCase","referrer","form","trim","bytes","replace","decodeURIComponent","Response","bodyInit","statusText","clone","response","redirectStatuses","redirect","RangeError","location","stack","constructor","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","send","polyfill","defineProperty","ponyfill","default","module","expiresAt","expiresIn","round","isBrowser","window","getParameterByName","results","RegExp","exec","resolveFetch","customFetch","_fetch","crossFetch","args","GoTrueApi","cookieOptions","_createRequestHeaders","jwt","cookieName","getUrlForProvider","provider","urlParams","redirectTo","scopes","signUpWithEmail","email","password","queryString","gotrue_meta_security","hcaptcha_token","captchaToken","session","expires_in","expires_at","signInWithEmail","signUpWithPhone","phone","signInWithPhone","signInWithOpenIDConnect","id_token","nonce","client_id","issuer","sendMagicLinkEmail","shouldCreateUser","create_user","sendMobileOTP","signOut","verifyMobileOTP","token","redirect_to","verifyOTP","inviteUserByEmail","resetPasswordForEmail","refreshAccessToken","refreshToken","refresh_token","setAuthCookie","end","access_token","deleteAuthCookie","getAuthCookieString","generateLink","createUser","attributes","user","listUsers","users","getUserById","uid","getUserByCookie","getUserError","getUser","updateUserById","deleteUser","remove","updateUser","globalThis","configurable","__magic__","polyfillGlobalThis","DEFAULT_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","SupabaseAuthClient","stateChangeEmitters","settings","currentUser","currentSession","localStorage","api","_recoverSession","_recoverAndRefresh","_listenForMultiTabEvents","getSessionFromUrl","storeSession","console","signUp","_removeSession","_saveSession","_notifyAllSubscribers","id","signIn","oidc","_handleEmailSignIn","_handlePhoneSignIn","_callRefreshToken","_handleProviderSignIn","_handleOpenIDConnectSignIn","refreshSession","setSession","setAuth","token_type","provider_token","parseInt","recoveryMode","hash","accessToken","onAuthStateChange","r","random","subscription","confirmed_at","email_confirmed_at","phone_confirmed_at","getItem","log","x","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","setItem","refreshTokenTimer","clearTimeout","removeItem","setTimeout","unref","newSession","newValue","super","PostgrestBuilder","builder","shouldThrowOnError","throwOnError","onfulfilled","onrejected","schema","includes","count","isReturnMinimal","countHeader","match","contentRange","_d","fetchError","details","hint","code","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","searchParams","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","_this","csv","PostgrestFilterBuilder","arguments","cs","contains","cd","containedBy","sl","rangeLt","sr","rangeGt","nxl","rangeGte","nxr","rangeLte","adj","rangeAdjacent","ov","overlaps","not","operator","or","filters","eq","neq","gt","gte","lt","lte","like","pattern","ilike","is","in","cleanedValues","s","textSearch","query","config","typePart","configPart","fts","plfts","phfts","wfts","PostgrestQueryBuilder","URL","head","upsert","onConflict","returning","prefersHeaders","unshift","reduce","acc","concat","uniqueColumns","ignoreDuplicates","PostgrestRpcBuilder","rpc","PostgrestClient","auth","table","PostgresTypes","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","charAt","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","lastIdx","closeBrace","arr","valTrim","_","_globalThis","naiveFallback","__global__","version","require$$0","NativeWebSocket","WebSocket","MozWebSocket","W3CWebSocket","uri","protocols","prop","browser","w3cwebsocket","websocket_version","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","Timer","timerCalc","timer","tries","reset","scheduleTimeout","Serializer","HEADER_LENGTH","rawPayload","_binaryDecode","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","topic","ref","payload","Push","channel","timeout","sent","timeoutTimer","receivedResp","recHooks","refEvent","resend","_cancelRefEvent","_hasReceived","startTimeout","socket","updatePayload","receive","makeRef","replyEventName","_cancelTimeout","_matchReceive","RealtimeSubscription","on","trigger","destroy","off","h","bindings","state","closed","joinedOnce","pushBuffer","joinPush","rejoinTimer","rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","onClose","joinRef","onError","reason","isLeaving","isClosed","errored","isJoining","reply","isConnected","rejoin","close","bind","canPush","isJoined","updateJoinPayload","leaving","leavePush","leave","onMessage","isMember","leaveOpenTopic","joining","handledPayload","isErrored","RealtimePresence","opts","pendingDiffs","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","static","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresences","currentPresences","newPresenceIds","presence_id","curPresenceIds","joinedPresences","leftPresences","joinedPresenceIds","curPresences","presenceIdsToRemove","chooser","_key","pres","func","metas","presence","list","by","RealtimeChannel","configs","binding","eventFilter","isEqual","obj1","obj2","__rest","t","getOwnPropertySymbols","propertyIsEnumerable","RealtimeClient","endPoint","channels","transport","heartbeatIntervalMs","longpollerTimeout","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","websocket","encode","reconnectTimer","disconnect","connect","endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","onConnMessage","onclose","_onConnClose","_reject","clearInterval","kind","onOpen","connectionState","connecting","closing","chanParams","isNewVersion","chan","rawMessage","_appendParams","vsn","newRef","user_token","dupChannel","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","SupabaseRealtimeClient","tableName","userToken","getPayloadRecords","records","new","old","Transformers.convertChangeData","old_record","enrichedPayload","commit_timestamp","eventType","errors","SupabaseQueryBuilder","realtime","_subscription","_realtime","_headers","_schema","_table","parameters","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","Key","upload","move","fromPath","toPath","sourceKey","destinationKey","copy","createSignedUrl","signedURL","createSignedUrls","paths","datum","download","getPublicUrl","publicURL","prefixes","StorageClient","listBuckets","getBucket","createBucket","public","updateBucket","emptyBucket","deleteBucket","FunctionsClient","Authorization","invoke","functionName","invokeOptions","isRelayError","SupabaseClient","supabaseUrl","supabaseKey","_supabaseUrl","restUrl","realtimeUrl","authUrl","storageUrl","urlParts","functionsUrl","_initSupabaseAuthClient","_initRealtimeClient","_listenForAuthEvents","functions","_getAuthHeaders","storage","SupabaseStorageClient","_initPostgRESTClient","removeAllSubscriptions","allSubs","getSubscriptions","allSubPromises","sub","removeSubscription","all","_closeSubscription","openSubCount","openSubscriptions","unsubError","_unsubscribeSubscription","authHeaders","apikey","authBearer","previousAccessToken","_handleTokenChanged","source","changedAccessToken","subscriber_queue","commentsData","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","writable","md5cycle","ff","gg","hh","ii","add32","cmn","q","md5blk","md5blks","charCodeAt","hex_chr","rhex","n","j","md5_1","num","hex","substring","tail","md51","__spreadArrays","il","jl","hexToRgb","bigint","invertHex","substr","invertHex_1","generatePath","curveVal","posVal","bigC","generatePath_1","generateFromString_2","idArr","md5hash_1","md5","el","backgroundColor","elColor","background","colors","hydrateSVGBlog","generateFromString","div9","t1_value","t3_value","formatDate","created_at","t5_value","comment","img","img_src_value","div2","div0","div1","strong","span","t1","t3","t5","create_if_block","div7","div4","input0","input1","textarea","div3","button","p1","div6","div5","iterations","toLocaleDateString","year","month","day","hostURL","postPath","anonKey","supabase","createClient","loading","getComments","async","$$invalidate","checkAndInsert","postURL","show","sendToTelegram","alert","h1","levels","updates","to_null_out","accounted_for","$$scope","spread_props","pathname","appUrl","Props","comments","getElementById"],"mappings":"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"}